import cv2
import os

# Function to encrypt the message using a Caesar cipher for uppercase letters
def encrypt_uppercase(text, shift):
    encrypted_text = ''
    for char in text:
        if char.isupper():  # Check if the character is an uppercase letter
            shifted = ord('A') + (ord(char) - ord('A') + shift) % 26
            encrypted_text += chr(shifted)
        else:
            encrypted_text += char
    return encrypted_text

# Read the image
img = cv2.imread("abcd.jpeg")

# Get the secret message and password from the user
msg = input("Enter secret message: ")
password = input("Enter password: ")

# Encrypt the secret message with a shift value
shift_value = int(input("Enter the shift value for encryption (an integer): "))
encrypted_msg = encrypt_uppercase(msg, shift_value)

d = {}
c = {}

for i in range(255):
    d[chr(i)] = i
    c[i] = chr(i)

m = 0
n = 0
z = 0

# Embed the encrypted message into the image
for i in range(len(encrypted_msg)):
    img[n, m, z] = d[encrypted_msg[i]]
    n = n + 1
    m = m + 1
    z = (z + 1) % 3

# Save the image with the encrypted message
cv2.imwrite("Encryptedmsg.jpg", img)
os.system("start Encryptedmsg.jpg")

# Decrypting the message from the image
message = ""
n = 0
m = 0
z = 0

# Prompt the user to enter the passcode for decryption
passcode = input("Enter passcode for Decryption: ")

if password == passcode:
    extracted_text = ""
    for i in range(len(encrypted_msg)):
        extracted_text += c[img[n, m, z]]
        n += 1
        m += 1
        z = (z + 1) % 3
    decrypted_msg = encrypt_uppercase(extracted_text, -shift_value)  # Decrypt the message
    print("Decrypted message:", decrypted_msg)
else:
    print("Invalid passcode")
